// db.joyl - دعم متعدد لقواعد البيانات
pub struct Database {
    conn: any,
    driver: string
}

pub enum DBDriver {
    SQLite,
    MySQL,
    PostgreSQL
}

pub fn db_connect(driver: DBDriver, conn_str: string) -> Database {
    let conn = native_db_connect(driver, conn_str);
    return Database { conn, driver: driver.name() };
}

pub fn Database.query(self, sql: string) -> [any] {
    return native_db_query(self.conn, sql);
}

pub fn Database.execute(self, sql: string) -> int {
    return native_db_execute(self.conn, sql);
}

pub fn Database.close(self) {
    native_db_close(self.conn);
}

pub fn sqlite_open(path: string) -> Database {
    return db_connect(DBDriver.SQLite, path);
}

pub fn mysql_connect(host: string, user: string, pass: string, db: string) -> Database {
    let conn_str = `mysql://${user}:${pass}@${host}/${db}`;
    return db_connect(DBDriver.MySQL, conn_str);
}